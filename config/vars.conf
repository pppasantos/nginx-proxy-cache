### General variables for logging purposes ###
set $resp_body "";
set $resp_headers "";
set $req_headers "";
set $cache_key "";
set $cache_status "";
#########################################################################################################

### Redis Connections ###

# Redis read host
set $redis_read_host         redis; # Change to the Redis IP or DNS if needed
# Redis write host
set $redis_write_host        redis; # Change to the Redis IP or DNS if needed
# Redis connection pool size
set $redis_pool_size         100;
# Redis cache Time-To-Live (TTL) in seconds
set $redis_ttl               9999;
# Redis timeout in milliseconds
set $redis_timeout           1000;

### Lua Config (when requesting backend) ###
# Timeout for backend response after Lua request (in milliseconds)
set $lua_backend_timeout     30000;
# Which protocol Lua will use to request the backend?
set $backend_url_scheme      https;
# Backend URL (IP or DNS)
set $backend_url_host        rickandmortyapi.com;
# Backend port
set $backend_host_port       443;
# Should Lua verify SSL when making requests to the backend? Default is true
set $lua_ssl_verify          false;
# Enable or disable Redis value encryption ("true" or "false")
set $redis_crypto_enabled    true;
# 32-byte AES encryption key, base64-encoded
# Example: echo -n 'your32bytekey................' | base64
set $redis_crypto_key        "8JWls0vR1m1MnVefTrOqBC8m9/5KmBGEvOwE3XYO4t4=";
# 16-byte AES IV (Initialization Vector), base64-encoded
# Example: echo -n 'your16byteiv......' | base64
set $redis_crypto_iv         "e1g/4AGceLx6eKkHZbfFvQ==";

############################################################################################################

### Cache Config Options ###

# HTTP methods to cache (comma-separated)
set $cache_methods           "GET,POST,HEAD";
# HTTP status codes to cache (comma-separated)
set $cache_statuses          "200,201,204";
# Internally treat HEAD requests as GET for caching purposes (true/false)
set $treat_head_as_get       "true";
# Headers included in cache key generation (lowercase, comma-separated), e.g.: authorization,vary,cookie
set $cache_headers           "";
# Include request body in cache key (true/false)
set $cache_use_body_in_key   "true";
# Comma-separated list of response headers to ignore when serving cached content
# To add one of these headers in the proxy response, use add_header in the location block
set $cache_exclude_response_headers "etag,cache-control,pragma,expires,age,last-modified,vary";
###############################################################################################################